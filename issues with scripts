issues with scripts
-------------------

1. data synchronize
2. time difference between service
3. server busy issue trigger scripts after before
4. differnce in pathe between servers.
5. need to automated the process above where now pull output of the scripts from different servers and comapare them locally.
	- need to build one to compare results with percentages of differences
6. get threshold from rob
7. need distributed system that can reachout to both systems.



required:
-------------------

1. import the class CompareProduct from a file. √
2. AutoCompare instead of Crontab. √
3. run the cycle from crontab, from the list, or from the product_update_times Or possibly from specific product list. √
4. the auto compare output a summary √
5. number of threadings: 
	cat /proc/sys/kernel/threads-max  --> 30124  √
6. run it on trader and save the output/report
7. Examine the report, identify the error patterns, fix/record them
8. fixed script errors in /pgs/bin, /pgs/lib/ or /pgs/formatter_post_proc


A. add diff /home/op/product_test/workdir/WSISJCTXT.energy-gfs-db1 /home/op/product_test/workdir/WSISJCTXT.18.212.5.40 > /home/op/product_test/workdir/WSISJCTXT.diffs to the file on top

B. header of the 2 compared files must be the same

C. # of lines

diff -y --suppress-common-lines file1.txt file2.txt | grep '^' | wc -l

count = 0
thefile = open(thefilepath, 'rb')
while 1:
    buffer = thefile.read(8192*1024)
    if not buffer: break
    count += buffer.count('\n')
thefile.close(  )



new summary:
1. period, product name , total number of lines, number of differe lines , format if differ, header if differ


to get the other products in the crontab
crontab -l | grep product_build_send | grep -v "^#" | sed -e 's/.*product//g' -e "s/>.*//g" -e 's/,/ /g'

crontab -l | grep "product_build_send -product" | grep -v "^#" | sed -e 's/.*product//g' -e "s/>.*//g" -e 's/,/ /g'

grep prod_build.py /pgs/bin/process* | sed -e 's/.*product//g'


crontab -l | grep process


head -n 3 file1.txt


diff < ( head -n 2 /home/op/product_test/workdir/NC2OBSTXT.CON.energy-gfs-db1 ) < ( head -n 2 /home/op/product_test/workdir/NC2OBSTXT.CON.18.212.5.40 )


bash -c "diff <(head -n 2 /home/op/product_test/workdir/testfile1.txt) <(head -n 2 /home/op/product_test/workdir/testfile2.txt)"

-----------------------------------------------

ACESHRLYNTLFCST

frmt_aces_hourly_fcst   <-- formatter    <--- /pgs/format_files_pl      <--- /data/gfs/v10/format_files_pl
to_dos                  <-- post_proc_script


perl_file =  /pgs/format_files_pl/frmt_aces_hourly_fcst.pl
format_filepath_arr:  ['/pgs/format_files/frmt_aces_hourly_fcst']

ACESHRLYNTLFCST.18.212.5.40
ACESHRLYNTLFCST.energy-gfs-db1
ACESHRLYNTLFCST.diffs


/data/gfs/v10/perllib  ---> cat GFS_format.pm library for the formatter :)


hotl_listerner.py  --> download from rapid mq file contain data and upload it to database -> work on certain tables

pull_skybase_obs.pl --> take data from skybase and put them in pgs db --> working on the skybase tables

mde-listener.py  --> grap files from rabbit mq load official edit table


diff /Users/mustafaalogaidi/Desktop/TWC/compare_formatter_files/frmt_aces_hourly_fcst_gfs.pl /Users/mustafaalogaidi/Desktop/TWC/compare_formatter_files/frmt_aces_hourly_fcst_pgs.pl 


ORDER # 112-3447955-0957034


----------------------------------------------

The SQL queries depend on the table, measurement, wsi_code, and time.    Measurements values are fetched from these tables,
9:31
official_edits
official_forecasts
official_minmaxtemp
official_pop
official_qpf
precip_observations
surface_observations
weather_observations
mean_climatology
9:32
The query has the following format:
9:32
select wsi_code, valid_time, temperature from official_forecasts where wsi_code = 17653 and valid_time >= '2021-11-15 21:00:00' and valid_time <= '2021-11-16 07:00:00' order by valid_time desc (edited) 
9:34
Highlighted are the parameters that are needed.
9:37
I had script to help run the queries on energy-gfs-db1 and pgs system.   It is installed on trader-dev-aws-distributor1 in product_test
9:37
This is an example
9:38
./query_database.py --wsi_code 17653 --measurement POP24 --datetime "2021-11-16 02:00:00" --hours_delta 50

In the output, the values, stored in the tables, differ between the two systems.
9:43
It is not much of differences, but it is alerted in the comparison of gfs_report ( or in auto_compare )